---
layout: doc
title: Kong Gateway  
description: Kong Gateway JWT & OIDC integration
navcategory: developer
---

== Overview

<todo>

== Prerequisites

* A FusionAuth instance running on a publicly accessible URL. You can spin up a link:/pricing[basic FusionAuth Cloud instance] or link:/docs/v1/tech/installation-guide/[install it on any server].
* A Kong Gateway instance, with service routes. You can follow the Kong quickstart guide at link:https://docs.konghq.com/gateway/3.1.x/get-started/[to setup Kong locally]
** Note: if the terminal seems to hang after outputting `Debugging info logged to 'kong-quickstart.log'`, it may be having trouble connecting to Docker. Try link:<todo>[resetting Docker to factory defaults] to solve this issue.

== Protect a service using JWT

- FusionAuth can generate JWTs. 
- Kong can then inspect and allow / deny access based on the JWT. 

== Set Up FusionAuth

Navigate to your FusionAuth instance.

First, you need to make sure the JWT issuer setting is correct. Navigate to [breadcrumb]#Tenants -> Your Tenant# and change the issuer to the URL of your FusionAuth instance. For example, `\https://local.fusionauth.io`. Record this value, as we'll set it in the AWS Gateway API Authorizor later. 

Next, you need to configure an application which will issue tokens to access the Amazon API Gateway project.

Navigate to [breadcrumb]#Applications# and then create a new Application. Fill out the [field]#Name# field, then click the [breadcrumb]#OAuth# tab.

Make sure that the [field]#Enabled grants# checkboxes have the `Authorization Code` and `Refresh Token` grants enabled.

Your application should look like this.

image::api-gateways/kong-gateway/<todo>.png[The FusionAuth example configuration,width=1200]

Click the `Save` button.


=== Set up a Kong JWT plugin

* Add a link:https://docs.konghq.com/hub/kong-inc/jwt/[JWT plugin]
* Follow the guide to setup the plugin on Kong

<todo>write this here but for FusionAuth: https://docs.konghq.com/hub/kong-inc/jwt/#using-the-jwt-plugin-with-auth0

=== Using OpenID Connect

* Check if we have access. Looks like enterprise, might need key. 



=== Next Steps

<todo>
